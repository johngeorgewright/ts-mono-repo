name: Publish

on:
  push:
    branches: [master]

concurrency:
  group: release

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    outputs:
      packages: ${{ steps.paths.outputs.packages }}
    steps:
      - name: Checkout project
        uses: actions/checkout@v4

      - name: Use Bun
        uses: oven-sh/setup-bun@v2

      - name: Install
        run: bun install

      - name: Build
        run: bun run build

      - name: Test
        run: bun test

      - name: Upload dists
        uses: actions/upload-artifact@v4
        with:
          if-no-files-found: error
          name: dists
          path: packages/**/dist

      - name: Output paths
        shell: python
        id: paths
        run: | # python
          import json
          from os import environ, listdir
          packages = []
          for packageDir in listdir('packages'):
              with open(f'packages/{packageDir}/package.json') as f:
                  pckg = json.load(f)
                  if not pckg.get('private', False):
                      packages.append(packageDir)
          with open(environ['GITHUB_OUTPUT'], 'a') as f:
              f.write(f'packages={json.dumps(packages)}\n')

  publish-npm:
    name: NPM
    needs: [build]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package: ${{ fromJson(needs.build.outputs.packages) }}
    steps:
      - name: Checkout project
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_TOKEN }}

      - name: Download dists
        uses: actions/download-artifact@v4
        with:
          name: dists
          path: ~/dists

      - name: Move dists to project
        run: | # shell
          for package in ~/dists/*
          do 
            mv "$package/dist" "packages/${package/$HOME\/dists\//}"
          done

      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        with:
          extra_plugins: '@semantic-release/exec@^7'
          working_directory: packages/${{ matrix.package }}
