name: Publish

on:
  push:
    branches: [master]

concurrency:
  group: release

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    steps:
      - name: Checkout project
        uses: actions/checkout@v3

      - name: NVM
        id: nvm
        run: echo "version=$(cat .nvmrc)" >> $GITHUB_OUTPUT

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        id: node
        with:
          node-version: ${{ matrix.node-version }}

      - name: Restore cache
        uses: actions/cache@v3
        id: cache
        with:
          path: |
            .yarn/unplugged
            .yarn/install-state.gz
          key: ${{ runner.os }}-yarn-${{ steps.node.outputs.node-version }}-${{ hashFiles('**/yarn.lock') }}

      - name: Yarn
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install --immutable

      - name: Build
        run: yarn build

      - name: Test
        run: yarn test

      - name: Upload dists
        uses: actions/upload-artifact@v3
        if: startsWith(matrix.node-version, steps.nvm.outputs.version)
        with:
          if-no-files-found: error
          name: dists
          path: packages/**/dist

  publish-npm:
    name: NPM
    if: github.actor != 'renovate[bot]'
    needs: [build]
    runs-on: ubuntu-latest
    permissions:
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests
      id-token: write # to enable use of OIDC for npm provenance
    steps:
      - name: Checkout project
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.PUSH_TOKEN }}

      - name: Install Node.js
        uses: actions/setup-node@v3
        id: node
        with:
          node-version-file: .nvmrc

      - name: Setup Registries
        run: |
          yarn config set --home 'npmRegistries["https://registry.npmjs.org"].npmAuthToken' '${{ secrets.NPM_TOKEN }}'
          yarn config set --home npmPublishRegistry https://registry.npmjs.org

      - name: Restore cache
        uses: actions/cache@v3
        id: cache
        with:
          path: |
            .yarn/unplugged
            .yarn/install-state.gz
          key: ${{ runner.os }}-yarn-${{ steps.node.outputs.node-version }}-${{ hashFiles('**/yarn.lock') }}

      - name: Yarn
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install --immutable

      - name: Download dists
        uses: actions/download-artifact@v3
        with:
          name: dists
          path: ~/dists

      - name: Move dists to project
        run: |
          for package in ~/dists/*
          do 
            mv "$package/dist" "packages/${package/$HOME\/dists\//}"
          done

      - name: Release
        run: yarn release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
